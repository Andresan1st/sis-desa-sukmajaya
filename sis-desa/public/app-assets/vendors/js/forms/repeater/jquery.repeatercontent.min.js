// jquery.repeater version 1.2.1
// https://github.com/DubFriend/jquery.repeater
// (MIT) 09-10-2016
// Brian Detering <BDeterin@gmail.com> (http://www.briandetering.net/)
!(function (a) {
    "use strict";
        (a.fn.repeater = function (c) {
            c = c || {};
            var d;
            return (
                a(this).each(function () {
                    var e = a(this),
                        f =
                            c.show ||
                            function () {
                                a(this).show();
                            },
                        i =
                            c.hide ||
                            function (a) {
                                a();
                            },
                        k = e.find("[data-repeater-list]").first(),
                        l = function (b, c) {
                            return b.filter(function () {
                                return !c || 0 === a(this).closest(n(c, "selector").join(",")).length;
                            });
                        },
                        p = function () {
                            return l(k.find("[data-repeater-item]"), c.repeaters);
                        },
                        q = k.find("[data-repeater-item]").first().clone().hide(),
                        r = l(l(a(this).find("[data-repeater-item]"), c.repeaters).first().find("[data-repeater-delete]"), c.repeaters);
                    c.isFirstItemUndeletable && r && r.remove();
                    var s = function () {
                            var a = k.data("repeater-list");
                            return c.$parent ? c.$parent.data("item-name") + "[" + a + "]" : a;
                        },
                        t = function (b) {
                            c.repeaters &&
                                b.each(function () {
                                    var b = a(this);
                                    g(c.repeaters, function (a) {
                                        b.find(a.selector).repeater(j(a, { $parent: b }));
                                    });
                                });
                        },
                        u = function (a, b, c) {
                            a &&
                                g(a, function (a) {
                                    c.call(b.find(a.selector)[0], a);
                                });
                        },
                        v = function (b, c, d) {
                            b.each(function (b) {
                                var e = a(this);
                                e.data("item-name", c + "[" + b + "]"),
                                    l(e.find("[name]"), d).each(function () {
                                        var f = a(this),
                                            g = f.attr("name").match(/\[[^\]]+\]/g),
                                            i = g ? h(g).replace(/\[|\]/g, "") : f.attr("name"),
                                            j = c + "[" + b + "][" + i + "]" + (f.is(":checkbox") || f.attr("multiple") ? "[]" : "");
                                        f.attr("name", j),
                                            u(d, e, function (d) {
                                                var e = a(this);
                                                v(l(e.find("[data-repeater-item]"), d.repeaters || []), c + "[" + b + "][" + e.find("[data-repeater-list]").first().data("repeater-list") + "]", d.repeaters);
                                            });
                                    });
                            }),
                                k.find("input[name][checked]").removeAttr("checked").prop("checked", !0);
                        };
                    v(p(), s(), c.repeaters),
                        t(p()),
                        c.initEmpty && p().remove(),
                        c.ready &&
                            c.ready(function () {
                                v(p(), s(), c.repeaters);
                            });
                    var w = (function () {
                            var d = function (e, f, h) {
                                if (f || c.defaultValues) {
                                    var i = {};
                                    l(e.find("[name]"), h).each(function () {
                                        var b = a(this)
                                            .attr("name")
                                            .match(/\[([^\]]*)(\]|\]\[\])$/)[1];
                                        i[b] = a(this).attr("name");
                                    }),
                                        e.inputVal(
                                            m(
                                                o(f || c.defaultValues, function (a, b) {
                                                    return i[b];
                                                }),
                                                b,
                                                function (a) {
                                                    return i[a];
                                                }
                                            )
                                        );
                                }
                                u(h, e, function (b) {
                                    var c = a(this);
                                    l(c.find("[data-repeater-item]"), b.repeaters).each(function () {
                                        var e = c.find("[data-repeater-list]").data("repeater-list");
                                        if (f && f[e]) {
                                            var h = a(this).clone();
                                            c.find("[data-repeater-item]").remove(),
                                                g(f[e], function (a) {
                                                    var e = h.clone();
                                                    d(e, a, b.repeaters || []), c.find("[data-repeater-list]").append(e);
                                                });
                                        } else d(a(this), b.defaultValues, b.repeaters || []);
                                    });
                                });
                            };
                            return function (b, e) {
                                k.append(b),
                                    v(p(), s(), c.repeaters),
                                    b.find("[name]").each(function () {
                                        a(this).inputClear();
                                    }),
                                    d(b, e || c.defaultValues, c.repeaters);
                            };
                        })(),
                        x = function (a) {
                            var b = q.clone();
                            w(b, a), c.repeaters && t(b), f.call(b.get(0));
                        };
                    (d = function (a) {
                        p().remove(), g(a, x);
                    }),
                        l(e.find("[data-repeater-create]"), c.repeaters).click(function () {
                            x();
                        }),
                        k.on("click", "[data-repeater-delete]", function () {
                            var b = a(this).closest("[data-repeater-item]").get(0);
                            i.call(b, function () {
                                a(b).remove(), v(p(), s(), c.repeaters);
                            });
                        });
                }),
                (this.setList = d),
                this
            );
        });
        // repeater 2
        
})(jQuery);
